name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io


jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      projects: ${{ env.PROJECT_NAMES }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
           filters: |
              kafkaproducer:
                - 'KafkaProducer/**'
                - 'CoreLibrary/**'
                - '.github/workflows/build-docker.yaml'
              kafkaconsumer:
                - 'KafkaConsumer/**'
                - 'CoreLibrary/**'
                - '.github/workflows/build-docker.yaml'

      - name: Prepare variables for KafkaProducer
        if: steps.filter.outputs.kafkaproducer == 'true'
        run: |
          projects=${{ fromJson(env.PROJECT_NAMES) }}
          projects+=('KafkaProducer')
          projectsJson="[$(echo $projects | sed 's/ /, /g')]"
          echo "PROJECT_NAMES=$projectsJson" >> $GITHUB_ENV

      - name: Prepare variables for KafkaConsumer
        if: steps.filter.outputs.kafkaconsumer == 'true'
        run: |
          projects=${{ fromJson(env.PROJECT_NAMES) }}
          projects+=('KafkaConsumer')
          projectsJson="[$(echo $projects | sed 's/ /, /g')]"
          echo "PROJECT_NAMES=$projectsJson" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: prepare-variables
    strategy:
      matrix: 
        project: ${{ fromJSON(needs.prepare-variables.outputs.projects) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ matrix.project }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: "${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ matrix.project }}/Dockerfile